#ifndef FIXED_HUFFMAN_TREES__H_
#define FIXED_HUFFMAN_TREES__H_

#include <cstdint>

static constexpr uint8_t fixed_huffman_literals_maxbits = 9;

static constexpr uint8_t fixed_huffman_literals_lens[288] = {
        8,     8,     8,     8,     8,     8,     8,     8,    // (   0)
        8,     8,     8,     8,     8,     8,     8,     8,    // (   8)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  16)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  24)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  32)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  40)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  48)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  56)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  64)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  72)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  80)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  88)
        8,     8,     8,     8,     8,     8,     8,     8,    // (  96)
        8,     8,     8,     8,     8,     8,     8,     8,    // ( 104)
        8,     8,     8,     8,     8,     8,     8,     8,    // ( 112)
        8,     8,     8,     8,     8,     8,     8,     8,    // ( 120)
        8,     8,     8,     8,     8,     8,     8,     8,    // ( 128)
        8,     8,     8,     8,     8,     8,     8,     8,    // ( 136)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 144)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 152)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 160)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 168)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 176)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 184)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 192)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 200)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 208)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 216)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 224)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 232)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 240)
        9,     9,     9,     9,     9,     9,     9,     9,    // ( 248)
        7,     7,     7,     7,     7,     7,     7,     7,    // ( 256)
        7,     7,     7,     7,     7,     7,     7,     7,    // ( 264)
        7,     7,     7,     7,     7,     7,     7,     7,    // ( 272)
        8,     8,     8,     8,     8,     8,     8,     8,    // ( 280)
    };

static constexpr uint16_t fixed_huffman_literals_codes[512] = {
      256,    80,    16,   280,   272,   112,    48,   192,    // (   0)
      264,    96,    32,   160,     0,   128,    64,   224,    // (   8)
      260,    88,    24,   144,   276,   120,    56,   208,    // (  16)
      268,   104,    40,   176,     8,   136,    72,   240,    // (  24)
      258,    84,    20,   284,   274,   116,    52,   200,    // (  32)
      266,   100,    36,   168,     4,   132,    68,   232,    // (  40)
      262,    92,    28,   152,   278,   124,    60,   216,    // (  48)
      270,   108,    44,   184,    12,   140,    76,   248,    // (  56)
      257,    82,    18,   282,   273,   114,    50,   196,    // (  64)
      265,    98,    34,   164,     2,   130,    66,   228,    // (  72)
      261,    90,    26,   148,   277,   122,    58,   212,    // (  80)
      269,   106,    42,   180,    10,   138,    74,   244,    // (  88)
      259,    86,    22,   286,   275,   118,    54,   204,    // (  96)
      267,   102,    38,   172,     6,   134,    70,   236,    // ( 104)
      263,    94,    30,   156,   279,   126,    62,   220,    // ( 112)
      271,   110,    46,   188,    14,   142,    78,   252,    // ( 120)
      256,    81,    17,   281,   272,   113,    49,   194,    // ( 128)
      264,    97,    33,   162,     1,   129,    65,   226,    // ( 136)
      260,    89,    25,   146,   276,   121,    57,   210,    // ( 144)
      268,   105,    41,   178,     9,   137,    73,   242,    // ( 152)
      258,    85,    21,   285,   274,   117,    53,   202,    // ( 160)
      266,   101,    37,   170,     5,   133,    69,   234,    // ( 168)
      262,    93,    29,   154,   278,   125,    61,   218,    // ( 176)
      270,   109,    45,   186,    13,   141,    77,   250,    // ( 184)
      257,    83,    19,   283,   273,   115,    51,   198,    // ( 192)
      265,    99,    35,   166,     3,   131,    67,   230,    // ( 200)
      261,    91,    27,   150,   277,   123,    59,   214,    // ( 208)
      269,   107,    43,   182,    11,   139,    75,   246,    // ( 216)
      259,    87,    23,   287,   275,   119,    55,   206,    // ( 224)
      267,   103,    39,   174,     7,   135,    71,   238,    // ( 232)
      263,    95,    31,   158,   279,   127,    63,   222,    // ( 240)
      271,   111,    47,   190,    15,   143,    79,   254,    // ( 248)
      256,    80,    16,   280,   272,   112,    48,   193,    // ( 256)
      264,    96,    32,   161,     0,   128,    64,   225,    // ( 264)
      260,    88,    24,   145,   276,   120,    56,   209,    // ( 272)
      268,   104,    40,   177,     8,   136,    72,   241,    // ( 280)
      258,    84,    20,   284,   274,   116,    52,   201,    // ( 288)
      266,   100,    36,   169,     4,   132,    68,   233,    // ( 296)
      262,    92,    28,   153,   278,   124,    60,   217,    // ( 304)
      270,   108,    44,   185,    12,   140,    76,   249,    // ( 312)
      257,    82,    18,   282,   273,   114,    50,   197,    // ( 320)
      265,    98,    34,   165,     2,   130,    66,   229,    // ( 328)
      261,    90,    26,   149,   277,   122,    58,   213,    // ( 336)
      269,   106,    42,   181,    10,   138,    74,   245,    // ( 344)
      259,    86,    22,   286,   275,   118,    54,   205,    // ( 352)
      267,   102,    38,   173,     6,   134,    70,   237,    // ( 360)
      263,    94,    30,   157,   279,   126,    62,   221,    // ( 368)
      271,   110,    46,   189,    14,   142,    78,   253,    // ( 376)
      256,    81,    17,   281,   272,   113,    49,   195,    // ( 384)
      264,    97,    33,   163,     1,   129,    65,   227,    // ( 392)
      260,    89,    25,   147,   276,   121,    57,   211,    // ( 400)
      268,   105,    41,   179,     9,   137,    73,   243,    // ( 408)
      258,    85,    21,   285,   274,   117,    53,   203,    // ( 416)
      266,   101,    37,   171,     5,   133,    69,   235,    // ( 424)
      262,    93,    29,   155,   278,   125,    61,   219,    // ( 432)
      270,   109,    45,   187,    13,   141,    77,   251,    // ( 440)
      257,    83,    19,   283,   273,   115,    51,   199,    // ( 448)
      265,    99,    35,   167,     3,   131,    67,   231,    // ( 456)
      261,    91,    27,   151,   277,   123,    59,   215,    // ( 464)
      269,   107,    43,   183,    11,   139,    75,   247,    // ( 472)
      259,    87,    23,   287,   275,   119,    55,   207,    // ( 480)
      267,   103,    39,   175,     7,   135,    71,   239,    // ( 488)
      263,    95,    31,   159,   279,   127,    63,   223,    // ( 496)
      271,   111,    47,   191,    15,   143,    79,   255,    // ( 504)
    };

static constexpr uint8_t fixed_huffman_distance_maxbits = 5;

static constexpr uint8_t fixed_huffman_distance_lens[32] = {
        5,     5,     5,     5,     5,     5,     5,     5,    // (   0)
        5,     5,     5,     5,     5,     5,     5,     5,    // (   8)
        5,     5,     5,     5,     5,     5,     5,     5,    // (  16)
        5,     5,     5,     5,     5,     5,     5,     5,    // (  24)
    };

static constexpr uint16_t fixed_huffman_distance_codes[32] = {
        0,    16,     8,    24,     4,    20,    12,    28,    // (   0)
        2,    18,    10,    26,     6,    22,    14,    30,    // (   8)
        1,    17,     9,    25,     5,    21,    13,    29,    // (  16)
        3,    19,    11,    27,     7,    23,    15,    31,    // (  24)
    };

#endif // FIXED_HUFFMAN_TREES__H_
